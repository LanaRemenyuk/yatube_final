    def test_page_redirects_comment_follow_unfollow(self):
        """Страницы перенаправляют авторизованных пользователей."""
        response = self.authorized_client. \
            get(f'/posts/{self.post.id}/comment/')
        self.assertRedirects(response, reverse(
            'posts:post_detail', args={self.post.id}))
        self.assertEqual(response.status_code, HTTPStatus.FOUND)

        response = self.authorized_client. \
            get(f'/profile/{self.user}/follow/')
        self.assertRedirects(response, reverse(
            'posts:profile', args={self.user}))
        self.assertEqual(response.status_code, HTTPStatus.FOUND)

        response = self.authorized_client. \
            get(f'/profile/{self.user}/unfollow/')
        self.assertRedirects(response, reverse(
            'posts:profile', args={self.user}))
        self.assertEqual(response.status_code, HTTPStatus.FOUND)


         rev = ('posts:post_detail', args={self.post.id})
         pages_url = {
                f'/posts/{self.post.id}/comment/': rev
            }

        for address, redpage in pages_url.items():
            with self.subTest(address=address):
                response = self.authorized_client.get(address)
                self.assertRedirects(response, redpage)